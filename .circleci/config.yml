# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

defaults: &defaults
  docker:
    - image: cimg/php:8.1-node
    - image: cimg/mysql:8.0
      environment:
        MYSQL_DATABASE: testing
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
        MYSQL_ROOT_PASSWORD: ""
    - image: redis

orbs:
  dockerize: ganta/dockerize@1.3.2

commands:
  setup-npm:
    steps:
      - checkout
      - restore_cache:
          keys:
            - cached-npm-{{ checksum "package-lock.json" }}
            - cached-npm-
      - run:
          name: NPM dependencies
          command: |
            npm i
      - save_cache:
          key: cached-npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

  setup-composer:
    steps:
      - checkout
      - restore_cache:
          keys:
            - cached-composer-{{ checksum "composer.lock" }}
            - cached-composer-
      - run:
          name: Composer dependencies
          command: |
            composer install --no-interaction
      - save_cache:
          key: cached-composer-{{ checksum "composer.lock" }}
          paths:
            - vendor

  setup-laravel:
    steps:
      - checkout
      - run:
          name: Key
          command: |
            php artisan key:generate
      # - run:
      #     name: Install Application
      #     command: |
      #       ./vendor/bin/sail up -d --build

  setup-pcov:
    steps:
      - run:
          name: Installing PHP pcov
          command: |
            sudo pecl install pcov-1.0.7
            sudo docker-php-ext-enable pcov

  setup-mysql:
    steps:
      - run:
          name: Configure MySQL
          command: |
            mysql -h127.0.0.1 -uroot --execute="SET GLOBAL max_connections = 10000; SET GLOBAL mysqlx_max_connections = 10000;"

jobs:
  lint:
    <<: *defaults
    steps:
      - setup-composer
      - run:
          name: "Linting with Laravel Pint"
          command: |
            ./vendor/bin/pint

  test:
    <<: *defaults
    steps:
      - setup-composer
      - setup-pcov
      - setup-laravel
      # - setup-mysql
      # - setup-npm
      - dockerize/wait-mysql
      - run:
          name: Run PHPUnit Tests (Parallel)
          command: |
            php vendor/bin/paratest

workflows:
  lint-and-test:
    jobs:
      - lint
      - test
